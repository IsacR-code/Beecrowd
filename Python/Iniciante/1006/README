# Beecrowd | 1006 | M√©dia 2

[Link para o Problema](https://www.beecrowd.com.br/judge/pt/problems/view/1006 )

## üéØ Resumo do Problema

A tarefa √© ler tr√™s notas de um aluno, `A`, `B` e `C`. As notas t√™m pesos 2, 3 e 5, respectivamente. √â preciso calcular a m√©dia ponderada dessas notas e exibir o resultado com uma casa decimal, no formato "MEDIA = [resultado]".

---

## üß† L√≥gica da Solu√ß√£o

A solu√ß√£o em Python foi desenvolvida de forma clara e direta, seguindo a l√≥gica da m√©dia ponderada e utilizando recursos de formata√ß√£o de string.

1.  **Leitura das Notas:** As tr√™s notas s√£o lidas da entrada padr√£o. Como s√£o valores que podem conter casas decimais, a fun√ß√£o `float()` √© aplicada a cada `input()` para converter as strings lidas para o tipo ponto flutuante.
    ```python
    A = float(input())
    B = float(input())
    C = float(input())
    ```

2.  **C√°lculo da M√©dia Ponderada:** A m√©dia √© calculada em uma √∫nica express√£o, aplicando a f√≥rmula da m√©dia ponderada: `(notaA * pesoA + notaB * pesoB + notaC * pesoC) / (soma dos pesos)`. A soma dos pesos (2 + 3 + 5) √© 10. O resultado √© armazenado na vari√°vel `media`.
    ```python
    media = (A * 2 + B * 3 + C * 5) / 10
    ```

3.  **Impress√£o Formatada:** A sa√≠da √© gerada utilizando uma *f-string*. A parte `{media:.1f}` formata o valor da vari√°vel `media` para que seja exibido com exatamente uma casa decimal, cumprindo o requisito de precis√£o do problema.
    ```python
    print(f"MEDIA = {media:.1f}")
    ```

---

## An√°lise de Complexidade

*   **Complexidade de Tempo:** `O(1)` - A solu√ß√£o executa um n√∫mero fixo de opera√ß√µes (tr√™s leituras, c√°lculos aritm√©ticos, uma impress√£o), resultando em uma complexidade de tempo constante.
*   **Complexidade de Espa√ßo:** `O(1)` - A quantidade de mem√≥ria utilizada para as vari√°veis `A`, `B`, `C` e `media` √© constante e n√£o depende dos valores de entrada.

---

## ‚úÖ Status

- [x] Solu√ß√£o enviada e aceita.
