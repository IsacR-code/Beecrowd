# Beecrowd | 1005 | M√©dia 1

[Link para o Problema](https://www.beecrowd.com.br/judge/pt/problems/view/1005 )

## üéØ Resumo do Problema

O desafio consiste em ler duas notas de um aluno, `A` e `B`. A nota `A` tem peso 3.5 e a nota `B` tem peso 7.5. O objetivo √© calcular a m√©dia ponderada dessas notas e imprimir o resultado com 5 casas decimais, no formato "MEDIA = [resultado]".

---

## üß† L√≥gica da Solu√ß√£o

A solu√ß√£o em Python aborda o problema de forma direta, utilizando a f√≥rmula da m√©dia ponderada e formata√ß√£o de string para a sa√≠da.

1.  **Leitura das Notas:** As duas notas s√£o lidas da entrada padr√£o. Como as notas podem ter valores decimais, a fun√ß√£o `float()` √© usada para converter as strings lidas pela fun√ß√£o `input()` para o tipo ponto flutuante.
    ```python
    A = float(input())
    B = float(input())
    ```

2.  **C√°lculo da M√©dia Ponderada:** A m√©dia √© calculada seguindo a f√≥rmula `(notaA * pesoA + notaB * pesoB) / (soma dos pesos)`. No c√≥digo, isso √© implementado como `(A * 3.5 + B * 7.5) / 11`, j√° que a soma dos pesos (3.5 + 7.5) √© 11. O resultado √© armazenado na vari√°vel `media`.
    ```python
    media = (A * 3.5 + B * 7.5) / 11
    ```

3.  **Impress√£o Formatada:** Uma *f-string* √© utilizada para gerar a sa√≠da. A express√£o `{media:.5f}` √© a chave aqui: ela formata o valor da vari√°vel `media` para que seja exibido com exatamente cinco casas decimais, atendendo ao requisito de precis√£o do problema.
    ```python
    print(f"MEDIA = {media:.5f}")
    ```

---

## An√°lise de Complexidade

*   **Complexidade de Tempo:** `O(1)` - A solu√ß√£o consiste em um n√∫mero fixo de opera√ß√µes aritm√©ticas e de entrada/sa√≠da, que s√£o executadas em tempo constante.
*   **Complexidade de Espa√ßo:** `O(1)` - A mem√≥ria alocada para as vari√°veis `A`, `B` e `media` √© constante e n√£o varia com os valores de entrada.

---

## ‚úÖ Status

- [x] Solu√ß√£o enviada e aceita.