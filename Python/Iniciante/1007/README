# Beecrowd | 1007 | Diferen√ßa

[Link para o Problema](https://www.beecrowd.com.br/judge/pt/problems/view/1007 )

## üéØ Resumo do Problema

O desafio consiste em ler quatro valores inteiros: `A`, `B`, `C` e `D`. Em seguida, deve-se calcular a diferen√ßa entre o produto de `A` e `B` e o produto de `C` e `D`. A f√≥rmula √© `(A * B - C * D)`. O resultado deve ser impresso no formato "DIFERENCA = [resultado]".

---

## üß† L√≥gica da Solu√ß√£o

A solu√ß√£o em Python foi implementada de maneira clara, seguindo os passos de leitura, c√°lculo e impress√£o.

1.  **Leitura dos Valores:** Os quatro valores inteiros s√£o lidos da entrada padr√£o, um por linha. A fun√ß√£o `int(input())` √© usada para cada um deles, garantindo que sejam lidos e convertidos para o tipo inteiro.
    ```python
    A = int(input())
    B = int(input())
    C = int(input())
    D = int(input())
    ```

2.  **C√°lculo da Diferen√ßa:** A express√£o matem√°tica `(A * B - C * D)` √© calculada. O resultado dessa opera√ß√£o √© armazenado na vari√°vel `diferenca`.
    ```python
    diferenca = (A * B - C * D)
    ```

3.  **Impress√£o do Resultado:** Uma *f-string* √© utilizada para formatar a sa√≠da. Ela combina o texto "DIFERENCA = " com o valor armazenado na vari√°vel `diferenca`, produzindo a string final que √© exibida no console.
    ```python
    print(f'DIFERENCA = {diferenca}')
    ```

---

## An√°lise de Complexidade

*   **Complexidade de Tempo:** `O(1)` - A solu√ß√£o executa um n√∫mero fixo de opera√ß√µes (quatro leituras, duas multiplica√ß√µes, uma subtra√ß√£o e uma impress√£o), o que a caracteriza como de tempo constante.
*   **Complexidade de Espa√ßo:** `O(1)` - A mem√≥ria necess√°ria para armazenar as vari√°veis `A`, `B`, `C`, `D` e `diferenca` √© constante e n√£o escala com os valores de entrada.

---

## ‚úÖ Status

- [x] Solu√ß√£o enviada e aceita.
